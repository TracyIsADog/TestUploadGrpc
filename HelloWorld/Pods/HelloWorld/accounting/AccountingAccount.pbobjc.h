// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accounting/accounting_account.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ACCANTAccount;
@class COMMONStatus;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ACCANTAccount_Type

typedef GPB_ENUM(ACCANTAccount_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ACCANTAccount_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 现金 */
  ACCANTAccount_Type_Cash = 0,

  /** 活期积分 */
  ACCANTAccount_Type_CurrentPoints = 1,

  /** 定期积分 */
  ACCANTAccount_Type_FixedPoints = 2,

  /** 红包 */
  ACCANTAccount_Type_Redpack = 3,

  /** 优惠券 */
  ACCANTAccount_Type_Coupon = 4,
};

GPBEnumDescriptor *ACCANTAccount_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ACCANTAccount_Type_IsValidValue(int32_t value);

#pragma mark - ACCANTAccountingAccountRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ACCANTAccountingAccountRoot : GPBRootObject
@end

#pragma mark - ACCANTUpsertAccountsRequest

typedef GPB_ENUM(ACCANTUpsertAccountsRequest_FieldNumber) {
  ACCANTUpsertAccountsRequest_FieldNumber_UserId = 11,
};

@interface ACCANTUpsertAccountsRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - ACCANTAccountResponse

typedef GPB_ENUM(ACCANTAccountResponse_FieldNumber) {
  ACCANTAccountResponse_FieldNumber_Account = 1,
  ACCANTAccountResponse_FieldNumber_Status = 999,
};

@interface ACCANTAccountResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) COMMONStatus *status;
/** Test to see if @c status has been set. */
@property(nonatomic, readwrite) BOOL hasStatus;

@property(nonatomic, readwrite, strong, null_resettable) ACCANTAccount *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@end

#pragma mark - ACCANTAccount

typedef GPB_ENUM(ACCANTAccount_FieldNumber) {
  ACCANTAccount_FieldNumber_Uuid = 11,
  ACCANTAccount_FieldNumber_UserId = 12,
  ACCANTAccount_FieldNumber_Created = 13,
  ACCANTAccount_FieldNumber_Type = 14,
  ACCANTAccount_FieldNumber_PreviousBalance = 15,
  ACCANTAccount_FieldNumber_PreviousDate = 16,
  ACCANTAccount_FieldNumber_CurrentChanges = 17,
  ACCANTAccount_FieldNumber_CurrentDate = 18,
  ACCANTAccount_FieldNumber_CurrentBalance = 19,
};

@interface ACCANTAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) int64_t created;

@property(nonatomic, readwrite) ACCANTAccount_Type type;

@property(nonatomic, readwrite) int32_t previousBalance;

@property(nonatomic, readwrite) int64_t previousDate;

@property(nonatomic, readwrite) int32_t currentChanges;

@property(nonatomic, readwrite) int64_t currentDate;

@property(nonatomic, readwrite) int32_t currentBalance;

@end

/**
 * Fetches the raw value of a @c ACCANTAccount's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ACCANTAccount_Type_RawValue(ACCANTAccount *message);
/**
 * Sets the raw value of an @c ACCANTAccount's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetACCANTAccount_Type_RawValue(ACCANTAccount *message, int32_t value);

#pragma mark - ACCANTGetAccountRequest

typedef GPB_ENUM(ACCANTGetAccountRequest_FieldNumber) {
  ACCANTGetAccountRequest_FieldNumber_Uuid = 1,
};

@interface ACCANTGetAccountRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

@end

#pragma mark - ACCANTUserAndType

typedef GPB_ENUM(ACCANTUserAndType_FieldNumber) {
  ACCANTUserAndType_FieldNumber_UserId = 11,
  ACCANTUserAndType_FieldNumber_Type = 14,
};

@interface ACCANTUserAndType : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) ACCANTAccount_Type type;

@end

/**
 * Fetches the raw value of a @c ACCANTUserAndType's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ACCANTUserAndType_Type_RawValue(ACCANTUserAndType *message);
/**
 * Sets the raw value of an @c ACCANTUserAndType's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetACCANTUserAndType_Type_RawValue(ACCANTUserAndType *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
