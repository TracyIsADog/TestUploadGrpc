// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store/store_member.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "store/StoreMember.pbobjc.h"
 #import "Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - STMEMStoreMemberRoot

@implementation STMEMStoreMemberRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - STMEMStoreMemberRoot_FileDescriptor

static GPBFileDescriptor *STMEMStoreMemberRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"store_member"
                                                 objcPrefix:@"STMEM"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - STMEMAddRequest

@implementation STMEMAddRequest

@dynamic storeId;
@dynamic memberId;

typedef struct STMEMAddRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *storeId;
  NSString *memberId;
} STMEMAddRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMAddRequest_FieldNumber_StoreId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMAddRequest__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMAddRequest_FieldNumber_MemberId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMAddRequest__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMAddRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMAddRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\007\000\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMUpdateRequest

@implementation STMEMUpdateRequest

@dynamic memberId;
@dynamic memberType;
@dynamic storeId;
@dynamic startTime;
@dynamic endTime;
@dynamic isMemberTypeUpdate;
@dynamic isStartTimeUpdate;
@dynamic isEndTimeUpdate;

typedef struct STMEMUpdateRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *memberId;
  NSString *memberType;
  NSString *storeId;
  int64_t startTime;
  int64_t endTime;
} STMEMUpdateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_MemberId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMUpdateRequest__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_MemberType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMUpdateRequest__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_StoreId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMUpdateRequest__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_StartTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STMEMUpdateRequest__storage_, startTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_EndTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STMEMUpdateRequest__storage_, endTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "isMemberTypeUpdate",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_IsMemberTypeUpdate,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isStartTimeUpdate",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_IsStartTimeUpdate,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isEndTimeUpdate",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateRequest_FieldNumber_IsEndTimeUpdate,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMUpdateRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMUpdateRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\010\000\003\n\000\005\007\000\t\t\000\n\007\000d\022\000f\021\000g\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMListByStoreRequest

@implementation STMEMListByStoreRequest

@dynamic storeId;
@dynamic from;
@dynamic size;

typedef struct STMEMListByStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *storeId;
} STMEMListByStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByStoreRequest_FieldNumber_StoreId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMListByStoreRequest__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByStoreRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMListByStoreRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByStoreRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMListByStoreRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMListByStoreRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMListByStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMListByMemberRequest

@implementation STMEMListByMemberRequest

@dynamic memberId;
@dynamic from;
@dynamic size;

typedef struct STMEMListByMemberRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *memberId;
} STMEMListByMemberRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByMemberRequest_FieldNumber_MemberId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMListByMemberRequest__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByMemberRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMListByMemberRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListByMemberRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMListByMemberRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMListByMemberRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMListByMemberRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMMembershipResponse

@implementation STMEMMembershipResponse

@dynamic hasStatus, status;
@dynamic memberId;
@dynamic memberType;
@dynamic storeId;
@dynamic active;
@dynamic startTime;
@dynamic endTime;
@dynamic from;

typedef struct STMEMMembershipResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  NSString *memberId;
  NSString *memberType;
  NSString *storeId;
  COMMONStatus *status;
  int64_t startTime;
  int64_t endTime;
} STMEMMembershipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_MemberId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_MemberType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_StoreId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_Active,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_StartTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, startTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_EndTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, endTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_From,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STMEMMembershipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMMembershipResponse class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMMembershipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010\000\003\n\000\005\007\000\t\t\000\n\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMBanRequest

@implementation STMEMBanRequest

@dynamic memberId;
@dynamic storeId;
@dynamic active;

typedef struct STMEMBanRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *memberId;
  NSString *storeId;
} STMEMBanRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanRequest_FieldNumber_MemberId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMBanRequest__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanRequest_FieldNumber_StoreId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMBanRequest__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanRequest_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMBanRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMBanRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010\000\005\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMBanResponse

@implementation STMEMBanResponse

@dynamic hasStatus, status;
@dynamic memberId;
@dynamic storeId;
@dynamic active;

typedef struct STMEMBanResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *memberId;
  NSString *storeId;
  COMMONStatus *status;
} STMEMBanResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "memberId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanResponse_FieldNumber_MemberId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMBanResponse__storage_, memberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeId",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanResponse_FieldNumber_StoreId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMBanResponse__storage_, storeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanResponse_FieldNumber_Active,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STMEMBanResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMBanResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMBanResponse class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMBanResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010\000\005\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
