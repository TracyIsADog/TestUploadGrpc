// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store/store_profile.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "store/StoreProfile.pbobjc.h"
 #import "Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"

#pragma mark - STPRFStoreProfileRoot

@implementation STPRFStoreProfileRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - STPRFStoreProfileRoot_FileDescriptor

static GPBFileDescriptor *STPRFStoreProfileRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"store_profile"
                                                 objcPrefix:@"STPRF"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - STPRFCreateRequest

@implementation STPRFCreateRequest

@dynamic name;
@dynamic hasLocation, location;
@dynamic districtUuid;
@dynamic detailAddress;

typedef struct STPRFCreateRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  COMMONLocation *location;
  NSString *districtUuid;
  NSString *detailAddress;
} STPRFCreateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateRequest_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFCreateRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFCreateRequest_FieldNumber_Location,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFCreateRequest__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "districtUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateRequest_FieldNumber_DistrictUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFCreateRequest__storage_, districtUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateRequest_FieldNumber_DetailAddress,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFCreateRequest__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFCreateRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFCreateRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\t\014\000\n\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFCreateResponse

@implementation STPRFCreateResponse

@dynamic hasStatus, status;
@dynamic uuid;
@dynamic name;
@dynamic ownerId;

typedef struct STPRFCreateResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  NSString *name;
  NSString *ownerId;
  COMMONStatus *status;
} STPRFCreateResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFCreateResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateResponse_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFCreateResponse__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ownerId",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateResponse_FieldNumber_OwnerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFCreateResponse__storage_, ownerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFCreateResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFCreateResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFCreateResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFCreateResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpdateRequest

@implementation STPRFUpdateRequest

@dynamic propertyOneOfCase;
@dynamic uuid;
@dynamic name;
@dynamic logo;
@dynamic location;
@dynamic type;
@dynamic desc;
@dynamic pointsRate;
@dynamic districtUuid;
@dynamic detailAddress;
@dynamic images;
@dynamic active;

typedef struct STPRFUpdateRequest__storage_ {
  uint32_t _has_storage_[2];
  int32_t pointsRate;
  NSString *uuid;
  NSString *name;
  NSString *logo;
  COMMONLocation *location;
  NSString *type;
  NSString *desc;
  NSString *districtUuid;
  NSString *detailAddress;
  STPRFListURL *images;
} STPRFUpdateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Name,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logo",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Logo,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, logo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFUpdateRequest_FieldNumber_Location,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Type,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Desc,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pointsRate",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_PointsRate,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, pointsRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "districtUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_DistrictUuid,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, districtUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_DetailAddress,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "images",
        .dataTypeSpecific.className = GPBStringifySymbol(STPRFListURL),
        .number = STPRFUpdateRequest_FieldNumber_Images,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateRequest__storage_, images),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateRequest_FieldNumber_Active,
        .hasIndex = -1,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpdateRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpdateRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    static const char *oneofs[] = {
      "property",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\010\n\000\t\014\000\n\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void STPRFUpdateRequest_ClearPropertyOneOfCase(STPRFUpdateRequest *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBMaybeClearOneof(message, oneof, -1, 0);
}
#pragma mark - STPRFListURL

@implementation STPRFListURL

@dynamic urlsArray, urlsArray_Count;

typedef struct STPRFListURL__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *urlsArray;
} STPRFListURL__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "urlsArray",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListURL_FieldNumber_UrlsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(STPRFListURL__storage_, urlsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFListURL class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFListURL__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpdateResponse

@implementation STPRFUpdateResponse

@dynamic hasStatus, status;
@dynamic uuid;

typedef struct STPRFUpdateResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
} STPRFUpdateResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFUpdateResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFUpdateResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpdateResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpdateResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpdateResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFGetRequest

@implementation STPRFGetRequest

@dynamic uuid;

typedef struct STPRFGetRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} STPRFGetRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFGetRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFGetRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFGetRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFGetRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFDeleteRequest

@implementation STPRFDeleteRequest

@dynamic uuid;

typedef struct STPRFDeleteRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} STPRFDeleteRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFDeleteRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFDeleteRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFDeleteRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFDeleteRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFDeleteResponse

@implementation STPRFDeleteResponse

@dynamic hasStatus, status;
@dynamic uuid;

typedef struct STPRFDeleteResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
} STPRFDeleteResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFDeleteResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFDeleteResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFDeleteResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFDeleteResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFDeleteResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFDeleteResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFListRequest

@implementation STPRFListRequest

@dynamic type;
@dynamic from;
@dynamic size;

typedef struct STPRFListRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *type;
} STPRFListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListRequest_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFListRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFListRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFListRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFListRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFFindByNameRequest

@implementation STPRFFindByNameRequest

@dynamic name;

typedef struct STPRFFindByNameRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
} STPRFFindByNameRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFFindByNameRequest_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFFindByNameRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFFindByNameRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFFindByNameRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFStoreProfileResponse

@implementation STPRFStoreProfileResponse

@dynamic hasStatus, status;
@dynamic hasStoreProfile, storeProfile;

typedef struct STPRFStoreProfileResponse__storage_ {
  uint32_t _has_storage_[1];
  STPRFStoreProfile *storeProfile;
  COMMONStatus *status;
} STPRFStoreProfileResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeProfile",
        .dataTypeSpecific.className = GPBStringifySymbol(STPRFStoreProfile),
        .number = STPRFStoreProfileResponse_FieldNumber_StoreProfile,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFStoreProfileResponse__storage_, storeProfile),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFStoreProfileResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFStoreProfileResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFStoreProfileResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFStoreProfileResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFStoreProfile

@implementation STPRFStoreProfile

@dynamic uuid;
@dynamic name;
@dynamic logo;
@dynamic hasLocation, location;
@dynamic type;
@dynamic desc;
@dynamic pointsRate;
@dynamic districtUuid;
@dynamic detailAddress;
@dynamic imagesArray, imagesArray_Count;
@dynamic active;
@dynamic from;

typedef struct STPRFStoreProfile__storage_ {
  uint32_t _has_storage_[1];
  int32_t pointsRate;
  int32_t from;
  NSString *uuid;
  NSString *name;
  NSString *logo;
  COMMONLocation *location;
  NSString *type;
  NSString *desc;
  NSString *districtUuid;
  NSString *detailAddress;
  NSMutableArray *imagesArray;
} STPRFStoreProfile__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logo",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Logo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, logo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFStoreProfile_FieldNumber_Location,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Desc,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pointsRate",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_PointsRate,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, pointsRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "districtUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_DistrictUuid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, districtUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_DetailAddress,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imagesArray",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_ImagesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, imagesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Active,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_From,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFStoreProfile class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFStoreProfile__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\010\n\000\t\014\000\n\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFBanRequest

@implementation STPRFBanRequest

@dynamic uuid;
@dynamic active;

typedef struct STPRFBanRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} STPRFBanRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFBanRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanRequest_FieldNumber_Active,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFBanRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFBanRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFBanResponse

@implementation STPRFBanResponse

@dynamic hasStatus, status;
@dynamic uuid;
@dynamic active;

typedef struct STPRFBanResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
} STPRFBanResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFBanResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanResponse_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFBanResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFBanResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFBanResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFBanResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
